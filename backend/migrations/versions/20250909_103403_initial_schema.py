"""initial schema

Revision ID: 2014606cd706
Revises: 
Create Date: 2025-09-09 10:34:03.623260

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2014606cd706'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('integration_providers',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('display_name', sa.TEXT(), nullable=False),
    sa.Column('provider_type', sa.String(length=50), nullable=False),
    sa.Column('icon_url', sa.TEXT(), nullable=True),
    sa.Column('configuration_schema', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('capabilities', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("provider_type IN ('notification', 'ticketing', 'crm', 'analytics', 'storage')", name='check_provider_type'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_integration_providers_active'), 'integration_providers', ['active'], unique=False)
    op.create_index(op.f('ix_integration_providers_created_at'), 'integration_providers', ['created_at'], unique=False)
    op.create_index(op.f('ix_integration_providers_name'), 'integration_providers', ['name'], unique=True)
    op.create_index(op.f('ix_integration_providers_provider_type'), 'integration_providers', ['provider_type'], unique=False)
    op.create_index(op.f('ix_integration_providers_updated_at'), 'integration_providers', ['updated_at'], unique=False)
    op.create_table('platforms',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('display_name', sa.TEXT(), nullable=False),
    sa.Column('status', sa.String(length=20), server_default=sa.text("'active'"), nullable=False),
    sa.Column('api_config', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("status IN ('active', 'maintenance', 'deprecated')", name='check_platform_status'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('subscription_plans',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('price_monthly', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('price_annual', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('limits', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text('\n            \'{"monitors": 5, "keywords_per_monitor": 10, "mentions_per_month": 1000,\n              "team_members": 3, "api_calls_per_month": 10000, "data_retention_days": 30}\'::jsonb\n        '), nullable=False),
    sa.Column('features', postgresql.ARRAY(sa.TEXT()), server_default=sa.text("ARRAY['basic_monitoring', 'email_alerts']"), nullable=False),
    sa.Column('active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subscription_plans_created_at'), 'subscription_plans', ['created_at'], unique=False)
    op.create_index(op.f('ix_subscription_plans_name'), 'subscription_plans', ['name'], unique=True)
    op.create_index(op.f('ix_subscription_plans_updated_at'), 'subscription_plans', ['updated_at'], unique=False)
    op.create_table('supertokens_users',
    sa.Column('user_id', sa.String(length=128), nullable=False),
    sa.Column('email', sa.String(length=256), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_login_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('email_verified', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('system_configuration',
    sa.Column('key', sa.String(length=255), nullable=False),
    sa.Column('value', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('is_sensitive', sa.Boolean(), nullable=False),
    sa.Column('updated_by', sa.String(length=128), nullable=True),
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_system_configuration_category'), 'system_configuration', ['category'], unique=False)
    op.create_index(op.f('ix_system_configuration_created_at'), 'system_configuration', ['created_at'], unique=False)
    op.create_index(op.f('ix_system_configuration_key'), 'system_configuration', ['key'], unique=True)
    op.create_index(op.f('ix_system_configuration_updated_at'), 'system_configuration', ['updated_at'], unique=False)
    op.create_table('system_health',
    sa.Column('component', sa.String(length=100), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('metrics', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('last_check_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('error_count', sa.Integer(), nullable=False),
    sa.Column('last_error_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('last_error_message', sa.TEXT(), nullable=True),
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("status IN ('healthy', 'degraded', 'unhealthy', 'unknown')", name='check_health_status'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_system_health_component_time', 'system_health', ['component', 'last_check_at'], unique=False)
    op.create_index(op.f('ix_system_health_component'), 'system_health', ['component'], unique=False)
    op.create_index(op.f('ix_system_health_created_at'), 'system_health', ['created_at'], unique=False)
    op.create_index(op.f('ix_system_health_last_check_at'), 'system_health', ['last_check_at'], unique=False)
    op.create_index(op.f('ix_system_health_status'), 'system_health', ['status'], unique=False)
    op.create_index(op.f('ix_system_health_updated_at'), 'system_health', ['updated_at'], unique=False)
    op.create_table('app_users',
    sa.Column('user_id', sa.String(length=128), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('display_name', sa.TEXT(), nullable=True),
    sa.Column('timezone', sa.String(length=50), server_default=sa.text("'UTC'"), nullable=False),
    sa.Column('language', sa.String(length=10), server_default=sa.text("'en'"), nullable=False),
    sa.Column('preferences', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text('\'{"notifications": {"email": true, "push": true, "frequency": "immediate"}}\'::jsonb'), nullable=False),
    sa.Column('data_retention_until', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('consent_marketing', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['supertokens_users.user_id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_app_users_created_at'), 'app_users', ['created_at'], unique=False)
    op.create_index(op.f('ix_app_users_updated_at'), 'app_users', ['updated_at'], unique=False)
    op.create_table('social_users',
    sa.Column('platform_id', sa.UUID(), nullable=False),
    sa.Column('platform_user_id', sa.TEXT(), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=True),
    sa.Column('display_name', sa.TEXT(), nullable=True),
    sa.Column('profile_url', sa.TEXT(), nullable=True),
    sa.Column('avatar_url', sa.TEXT(), nullable=True),
    sa.Column('follower_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('following_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('post_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('verified', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('account_type', sa.String(length=50), nullable=True),
    sa.Column('influence_score', sa.DECIMAL(precision=5, scale=2), server_default=sa.text('0'), nullable=False),
    sa.Column('engagement_rate', sa.DECIMAL(precision=5, scale=4), nullable=True),
    sa.Column('last_active_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('bio', sa.TEXT(), nullable=True),
    sa.Column('location', sa.TEXT(), nullable=True),
    sa.Column('website_url', sa.TEXT(), nullable=True),
    sa.Column('created_on_platform_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('last_updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['platform_id'], ['platforms.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('platform_id', 'platform_user_id')
    )
    op.create_index(op.f('ix_social_users_created_at'), 'social_users', ['created_at'], unique=False)
    op.create_index(op.f('ix_social_users_platform_id'), 'social_users', ['platform_id'], unique=False)
    op.create_index(op.f('ix_social_users_platform_user_id'), 'social_users', ['platform_user_id'], unique=False)
    op.create_index(op.f('ix_social_users_updated_at'), 'social_users', ['updated_at'], unique=False)
    op.create_index(op.f('ix_social_users_username'), 'social_users', ['username'], unique=False)
    op.create_table('mentions',
    sa.Column('platform_id', sa.UUID(), nullable=False),
    sa.Column('social_user_id', sa.UUID(), nullable=False),
    sa.Column('platform_post_id', sa.TEXT(), nullable=False),
    sa.Column('content_text', sa.TEXT(), nullable=False),
    sa.Column('content_html', sa.TEXT(), nullable=True),
    sa.Column('normalized_content', sa.TEXT(), nullable=True),
    sa.Column('language', sa.String(length=10), nullable=True),
    sa.Column('post_type', sa.String(length=50), server_default=sa.text("'post'"), nullable=False),
    sa.Column('parent_post_id', sa.TEXT(), nullable=True),
    sa.Column('media_urls', postgresql.ARRAY(sa.TEXT()), server_default=sa.text('ARRAY[]::TEXT[]'), nullable=False),
    sa.Column('external_links', postgresql.ARRAY(sa.TEXT()), server_default=sa.text('ARRAY[]::TEXT[]'), nullable=False),
    sa.Column('hashtags', postgresql.ARRAY(sa.TEXT()), server_default=sa.text('ARRAY[]::TEXT[]'), nullable=False),
    sa.Column('mentioned_users', postgresql.ARRAY(sa.TEXT()), server_default=sa.text('ARRAY[]::TEXT[]'), nullable=False),
    sa.Column('published_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('collected_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('likes_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('shares_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('comments_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('views_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('sentiment_score', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('sentiment_label', sa.String(length=20), nullable=True),
    sa.Column('toxicity_score', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('spam_probability', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('priority_score', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('processing_status', sa.String(length=20), server_default=sa.text("'pending'"), nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("processing_status IN ('pending', 'processed', 'error')"),
    sa.ForeignKeyConstraint(['platform_id'], ['platforms.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['social_user_id'], ['social_users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('platform_id', 'platform_post_id')
    )
    op.create_index(op.f('ix_mentions_created_at'), 'mentions', ['created_at'], unique=False)
    op.create_index(op.f('ix_mentions_updated_at'), 'mentions', ['updated_at'], unique=False)
    op.create_table('workspaces',
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('slug', sa.TEXT(), nullable=False),
    sa.Column('owner_id', sa.String(length=128), nullable=False),
    sa.Column('settings', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text('\'{"data_retention_days": 90, "auto_assignment": false}\'::jsonb'), nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("slug ~ '^[a-z0-9-]+$'", name='check_workspace_slug_format'),
    sa.ForeignKeyConstraint(['owner_id'], ['app_users.user_id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_workspaces_created_at'), 'workspaces', ['created_at'], unique=False)
    op.create_index(op.f('ix_workspaces_name'), 'workspaces', ['name'], unique=False)
    op.create_index(op.f('ix_workspaces_owner_id'), 'workspaces', ['owner_id'], unique=False)
    op.create_index(op.f('ix_workspaces_slug'), 'workspaces', ['slug'], unique=True)
    op.create_index(op.f('ix_workspaces_updated_at'), 'workspaces', ['updated_at'], unique=False)
    op.create_table('audit_logs',
    sa.Column('workspace_id', sa.UUID(), nullable=True),
    sa.Column('user_id', sa.String(length=128), nullable=True),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('resource_type', sa.String(length=50), nullable=False),
    sa.Column('resource_id', sa.TEXT(), nullable=True),
    sa.Column('old_values', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('new_values', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('ip_address', postgresql.INET(), nullable=True),
    sa.Column('user_agent', sa.TEXT(), nullable=True),
    sa.Column('session_id', sa.String(length=255), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=False),
    sa.Column('error_message', sa.TEXT(), nullable=True),
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_audit_log_resource', 'audit_logs', ['resource_type', 'resource_id'], unique=False)
    op.create_index('idx_audit_log_timestamp', 'audit_logs', ['created_at'], unique=False)
    op.create_index('idx_audit_log_user_action', 'audit_logs', ['user_id', 'action'], unique=False)
    op.create_index(op.f('ix_audit_logs_action'), 'audit_logs', ['action'], unique=False)
    op.create_index(op.f('ix_audit_logs_created_at'), 'audit_logs', ['created_at'], unique=False)
    op.create_index(op.f('ix_audit_logs_resource_id'), 'audit_logs', ['resource_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_resource_type'), 'audit_logs', ['resource_type'], unique=False)
    op.create_index(op.f('ix_audit_logs_session_id'), 'audit_logs', ['session_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_success'), 'audit_logs', ['success'], unique=False)
    op.create_index(op.f('ix_audit_logs_updated_at'), 'audit_logs', ['updated_at'], unique=False)
    op.create_index(op.f('ix_audit_logs_user_id'), 'audit_logs', ['user_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_workspace_id'), 'audit_logs', ['workspace_id'], unique=False)
    op.create_table('data_exports',
    sa.Column('workspace_id', sa.UUID(), nullable=False),
    sa.Column('requested_by', sa.String(length=128), nullable=False),
    sa.Column('export_type', sa.String(length=50), nullable=False),
    sa.Column('export_format', sa.String(length=20), nullable=False),
    sa.Column('filters', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('progress_percentage', sa.Integer(), nullable=False),
    sa.Column('total_records', sa.BigInteger(), nullable=True),
    sa.Column('processed_records', sa.BigInteger(), nullable=False),
    sa.Column('file_path', sa.TEXT(), nullable=True),
    sa.Column('file_size_bytes', sa.BigInteger(), nullable=True),
    sa.Column('download_url', sa.TEXT(), nullable=True),
    sa.Column('expires_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('started_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('completed_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('error_message', sa.TEXT(), nullable=True),
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("export_format IN ('csv', 'xlsx', 'json', 'pdf')", name='check_export_format'),
    sa.CheckConstraint("export_type IN ('mentions', 'analytics', 'users', 'monitors', 'alerts')", name='check_export_type'),
    sa.CheckConstraint("status IN ('pending', 'processing', 'completed', 'failed', 'expired')", name='check_export_status'),
    sa.CheckConstraint('progress_percentage >= 0 AND progress_percentage <= 100', name='check_progress_range'),
    sa.ForeignKeyConstraint(['requested_by'], ['app_users.user_id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_data_exports_created_at'), 'data_exports', ['created_at'], unique=False)
    op.create_index(op.f('ix_data_exports_expires_at'), 'data_exports', ['expires_at'], unique=False)
    op.create_index(op.f('ix_data_exports_export_type'), 'data_exports', ['export_type'], unique=False)
    op.create_index(op.f('ix_data_exports_requested_by'), 'data_exports', ['requested_by'], unique=False)
    op.create_index(op.f('ix_data_exports_status'), 'data_exports', ['status'], unique=False)
    op.create_index(op.f('ix_data_exports_updated_at'), 'data_exports', ['updated_at'], unique=False)
    op.create_index(op.f('ix_data_exports_workspace_id'), 'data_exports', ['workspace_id'], unique=False)
    op.create_table('influencer_categories',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('workspace_id', sa.UUID(), nullable=False),
    sa.Column('social_user_id', sa.UUID(), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('added_by', sa.String(length=128), nullable=False),
    sa.Column('added_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['added_by'], ['app_users.user_id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['social_user_id'], ['social_users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('workspace_id', 'social_user_id', 'category')
    )
    op.create_table('mention_assignments',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('mention_id', sa.UUID(), nullable=False),
    sa.Column('workspace_id', sa.UUID(), nullable=False),
    sa.Column('assigned_to', sa.String(length=128), nullable=True),
    sa.Column('assigned_by', sa.String(length=128), nullable=False),
    sa.Column('status', sa.String(length=20), server_default=sa.text("'pending'"), nullable=False),
    sa.Column('priority', sa.String(length=20), server_default=sa.text("'medium'"), nullable=False),
    sa.Column('due_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('assigned_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint("priority IN ('low', 'medium', 'high', 'urgent')", name='mention_assignments_priority_check'),
    sa.CheckConstraint("status IN ('pending', 'in_progress', 'completed', 'skipped')", name='mention_assignments_status_check'),
    sa.ForeignKeyConstraint(['assigned_by'], ['app_users.user_id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['assigned_to'], ['app_users.user_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['mention_id'], ['mentions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('mention_id', 'workspace_id', name='uq_mention_workspace_assignment')
    )
    op.create_table('mention_categories',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('workspace_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('color', sa.String(length=7), nullable=True),
    sa.Column('auto_assignment_rules', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('workspace_id', 'name')
    )
    op.create_table('mention_fingerprints',
    sa.Column('mention_id', sa.UUID(), nullable=False),
    sa.Column('content_hash', sa.CHAR(length=64), nullable=False),
    sa.Column('similarity_hash', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['mention_id'], ['mentions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('mention_id')
    )
    op.create_table('monitors',
    sa.Column('workspace_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('keywords', postgresql.ARRAY(sa.TEXT()), nullable=False),
    sa.Column('negative_keywords', postgresql.ARRAY(sa.TEXT()), server_default=sa.text('ARRAY[]::TEXT[]'), nullable=False),
    sa.Column('platforms', postgresql.ARRAY(sa.TEXT()), nullable=False),
    sa.Column('languages', postgresql.ARRAY(sa.String(length=10)), server_default=sa.text("ARRAY['en']"), nullable=False),
    sa.Column('status', sa.String(length=20), server_default=sa.text("'active'"), nullable=False),
    sa.Column('real_time', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('include_retweets', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('min_followers', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('created_by', sa.String(length=128), nullable=False),
    sa.Column('last_mention_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("status IN ('active', 'paused', 'archived')", name='monitors_status_check'),
    sa.ForeignKeyConstraint(['created_by'], ['app_users.user_id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_monitors_created_at'), 'monitors', ['created_at'], unique=False)
    op.create_index(op.f('ix_monitors_updated_at'), 'monitors', ['updated_at'], unique=False)
    op.create_table('notification_preferences',
    sa.Column('user_id', sa.String(length=128), nullable=False),
    sa.Column('workspace_id', sa.UUID(), nullable=True),
    sa.Column('notification_type', sa.String(length=50), nullable=False),
    sa.Column('channels', postgresql.ARRAY(sa.TEXT()), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('frequency', sa.String(length=20), nullable=False),
    sa.Column('quiet_hours_start', sa.String(length=5), nullable=True),
    sa.Column('quiet_hours_end', sa.String(length=5), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("frequency IN ('immediate', 'hourly', 'daily', 'weekly', 'never')", name='check_preference_frequency'),
    sa.ForeignKeyConstraint(['user_id'], ['app_users.user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_notification_pref_user_workspace', 'notification_preferences', ['user_id', 'workspace_id'], unique=False)
    op.create_index(op.f('ix_notification_preferences_created_at'), 'notification_preferences', ['created_at'], unique=False)
    op.create_index(op.f('ix_notification_preferences_enabled'), 'notification_preferences', ['enabled'], unique=False)
    op.create_index(op.f('ix_notification_preferences_notification_type'), 'notification_preferences', ['notification_type'], unique=False)
    op.create_index(op.f('ix_notification_preferences_updated_at'), 'notification_preferences', ['updated_at'], unique=False)
    op.create_index(op.f('ix_notification_preferences_user_id'), 'notification_preferences', ['user_id'], unique=False)
    op.create_index(op.f('ix_notification_preferences_workspace_id'), 'notification_preferences', ['workspace_id'], unique=False)
    op.create_table('notification_queue',
    sa.Column('workspace_id', sa.UUID(), nullable=False),
    sa.Column('recipient_id', sa.String(length=128), nullable=False),
    sa.Column('channel', sa.String(length=20), nullable=False),
    sa.Column('recipient_address', sa.TEXT(), nullable=False),
    sa.Column('subject', sa.TEXT(), nullable=True),
    sa.Column('body', sa.TEXT(), nullable=False),
    sa.Column('priority', sa.String(length=20), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('scheduled_for', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('attempts', sa.Integer(), nullable=False),
    sa.Column('max_attempts', sa.Integer(), nullable=False),
    sa.Column('last_attempt_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('sent_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('error_message', sa.TEXT(), nullable=True),
    sa.Column('notification_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("channel IN ('email', 'sms', 'slack', 'teams', 'webhook', 'push')", name='check_queue_channel'),
    sa.CheckConstraint("priority IN ('low', 'normal', 'high', 'urgent')", name='check_queue_priority'),
    sa.CheckConstraint("status IN ('pending', 'processing', 'sent', 'failed', 'cancelled')", name='check_queue_status'),
    sa.ForeignKeyConstraint(['recipient_id'], ['app_users.user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_notification_queue_processing', 'notification_queue', ['status', 'scheduled_for', 'priority'], unique=False)
    op.create_index(op.f('ix_notification_queue_channel'), 'notification_queue', ['channel'], unique=False)
    op.create_index(op.f('ix_notification_queue_created_at'), 'notification_queue', ['created_at'], unique=False)
    op.create_index(op.f('ix_notification_queue_external_id'), 'notification_queue', ['external_id'], unique=False)
    op.create_index(op.f('ix_notification_queue_priority'), 'notification_queue', ['priority'], unique=False)
    op.create_index(op.f('ix_notification_queue_recipient_id'), 'notification_queue', ['recipient_id'], unique=False)
    op.create_index(op.f('ix_notification_queue_scheduled_for'), 'notification_queue', ['scheduled_for'], unique=False)
    op.create_index(op.f('ix_notification_queue_status'), 'notification_queue', ['status'], unique=False)
    op.create_index(op.f('ix_notification_queue_updated_at'), 'notification_queue', ['updated_at'], unique=False)
    op.create_index(op.f('ix_notification_queue_workspace_id'), 'notification_queue', ['workspace_id'], unique=False)
    op.create_table('notification_templates',
    sa.Column('workspace_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('template_type', sa.String(length=50), nullable=False),
    sa.Column('channel', sa.String(length=20), nullable=False),
    sa.Column('subject_template', sa.TEXT(), nullable=True),
    sa.Column('body_template', sa.TEXT(), nullable=False),
    sa.Column('variables', postgresql.ARRAY(sa.TEXT()), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.String(length=128), nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("channel IN ('email', 'sms', 'slack', 'teams', 'webhook', 'push')", name='check_notification_channel'),
    sa.CheckConstraint("template_type IN ('alert', 'digest', 'welcome', 'report', 'reminder')", name='check_template_type'),
    sa.ForeignKeyConstraint(['created_by'], ['app_users.user_id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_notification_template_workspace_type', 'notification_templates', ['workspace_id', 'template_type'], unique=False)
    op.create_index(op.f('ix_notification_templates_active'), 'notification_templates', ['active'], unique=False)
    op.create_index(op.f('ix_notification_templates_channel'), 'notification_templates', ['channel'], unique=False)
    op.create_index(op.f('ix_notification_templates_created_at'), 'notification_templates', ['created_at'], unique=False)
    op.create_index(op.f('ix_notification_templates_created_by'), 'notification_templates', ['created_by'], unique=False)
    op.create_index(op.f('ix_notification_templates_name'), 'notification_templates', ['name'], unique=False)
    op.create_index(op.f('ix_notification_templates_template_type'), 'notification_templates', ['template_type'], unique=False)
    op.create_index(op.f('ix_notification_templates_updated_at'), 'notification_templates', ['updated_at'], unique=False)
    op.create_index(op.f('ix_notification_templates_workspace_id'), 'notification_templates', ['workspace_id'], unique=False)
    op.create_table('usage_tracking',
    sa.Column('workspace_id', sa.UUID(), nullable=False),
    sa.Column('period_start', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('period_end', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('usage_data', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text('\n            \'{"mentions_collected": 0, "api_calls": 0, "alerts_sent": 0, "active_monitors": 0}\'::jsonb\n        '), nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('workspace_id', 'period_start')
    )
    op.create_index(op.f('ix_usage_tracking_created_at'), 'usage_tracking', ['created_at'], unique=False)
    op.create_index(op.f('ix_usage_tracking_period_start'), 'usage_tracking', ['period_start'], unique=False)
    op.create_index(op.f('ix_usage_tracking_updated_at'), 'usage_tracking', ['updated_at'], unique=False)
    op.create_index(op.f('ix_usage_tracking_workspace_id'), 'usage_tracking', ['workspace_id'], unique=False)
    op.create_table('workspace_integrations',
    sa.Column('workspace_id', sa.UUID(), nullable=False),
    sa.Column('provider_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('configuration', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('encrypted_credentials', sa.TEXT(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('last_sync_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('sync_error', sa.TEXT(), nullable=True),
    sa.Column('created_by', sa.String(length=128), nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("status IN ('active', 'error', 'disabled', 'pending')", name='check_integration_status'),
    sa.ForeignKeyConstraint(['created_by'], ['app_users.user_id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['provider_id'], ['integration_providers.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('workspace_id', 'provider_id', 'name')
    )
    op.create_index(op.f('ix_workspace_integrations_created_at'), 'workspace_integrations', ['created_at'], unique=False)
    op.create_index(op.f('ix_workspace_integrations_created_by'), 'workspace_integrations', ['created_by'], unique=False)
    op.create_index(op.f('ix_workspace_integrations_provider_id'), 'workspace_integrations', ['provider_id'], unique=False)
    op.create_index(op.f('ix_workspace_integrations_status'), 'workspace_integrations', ['status'], unique=False)
    op.create_index(op.f('ix_workspace_integrations_updated_at'), 'workspace_integrations', ['updated_at'], unique=False)
    op.create_index(op.f('ix_workspace_integrations_workspace_id'), 'workspace_integrations', ['workspace_id'], unique=False)
    op.create_table('workspace_members',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('workspace_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.String(length=128), nullable=False),
    sa.Column('role', sa.String(length=20), server_default=sa.text("'member'"), nullable=False),
    sa.Column('permissions', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text('\n            \'{"monitors": {"create": true, "edit": true, "delete": false},\n              "mentions": {"assign": true, "respond": true},\n              "analytics": {"view": true},\n              "billing": {"view": false}}\'::jsonb\n        '), nullable=False),
    sa.Column('joined_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("role IN ('owner', 'admin', 'member', 'viewer')", name='check_member_role'),
    sa.ForeignKeyConstraint(['user_id'], ['app_users.user_id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('workspace_id', 'user_id')
    )
    op.create_table('workspace_subscriptions',
    sa.Column('workspace_id', sa.UUID(), nullable=False),
    sa.Column('plan_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.String(length=20), server_default=sa.text("'active'"), nullable=False),
    sa.Column('current_period_start', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('current_period_end', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('stripe_subscription_id', sa.String(length=255), nullable=True),
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("status IN ('active', 'cancelled', 'expired', 'past_due')", name='check_subscription_status'),
    sa.ForeignKeyConstraint(['plan_id'], ['subscription_plans.id'], ),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_workspace_subscriptions_created_at'), 'workspace_subscriptions', ['created_at'], unique=False)
    op.create_index(op.f('ix_workspace_subscriptions_current_period_end'), 'workspace_subscriptions', ['current_period_end'], unique=False)
    op.create_index(op.f('ix_workspace_subscriptions_plan_id'), 'workspace_subscriptions', ['plan_id'], unique=False)
    op.create_index(op.f('ix_workspace_subscriptions_stripe_subscription_id'), 'workspace_subscriptions', ['stripe_subscription_id'], unique=True)
    op.create_index(op.f('ix_workspace_subscriptions_updated_at'), 'workspace_subscriptions', ['updated_at'], unique=False)
    op.create_index(op.f('ix_workspace_subscriptions_workspace_id'), 'workspace_subscriptions', ['workspace_id'], unique=True)
    op.create_table('alert_rules',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('monitor_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('conditions', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text('\n            \'{"sentiment": {"enabled": false, "threshold": -0.5, "operator": "below"},\n             "volume_spike": {"enabled": false, "percentage": 200, "timeframe_hours": 1},\n             "influencer": {"enabled": false, "min_followers": 10000},\n             "priority": {"enabled": false, "min_score": 70},\n             "keywords": {"enabled": false, "keywords": [], "operator": "any"}}\'::jsonb\n        '), nullable=False),
    sa.Column('frequency', sa.String(length=20), server_default=sa.text("'immediate'"), nullable=False),
    sa.Column('channels', postgresql.ARRAY(sa.Text()), server_default=sa.text("ARRAY['email']"), nullable=False),
    sa.Column('recipients', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('status', sa.String(length=20), server_default=sa.text("'active'"), nullable=False),
    sa.Column('created_by', sa.String(length=128), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_triggered_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint("frequency IN ('immediate', 'hourly', 'daily', 'weekly')", name='alert_rules_frequency_check'),
    sa.CheckConstraint("status IN ('active', 'paused')", name='alert_rules_status_check'),
    sa.ForeignKeyConstraint(['created_by'], ['app_users.user_id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['monitor_id'], ['monitors.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mention_category_assignments',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('mention_id', sa.UUID(), nullable=False),
    sa.Column('category_id', sa.UUID(), nullable=False),
    sa.Column('confidence_score', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('assigned_by', sa.String(length=20), server_default=sa.text("'auto'"), nullable=False),
    sa.Column('assigned_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("assigned_by IN ('auto', 'manual')", name='check_mca_assigned_by'),
    sa.ForeignKeyConstraint(['category_id'], ['mention_categories.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['mention_id'], ['mentions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('mention_id', 'category_id')
    )
    op.create_table('mention_responses',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('mention_id', sa.UUID(), nullable=False),
    sa.Column('assignment_id', sa.UUID(), nullable=True),
    sa.Column('response_type', sa.String(length=50), nullable=False),
    sa.Column('platform_response_id', sa.Text(), nullable=True),
    sa.Column('response_content', sa.Text(), nullable=True),
    sa.Column('responded_by', sa.String(length=128), nullable=False),
    sa.Column('responded_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('external_ticket_id', sa.Text(), nullable=True),
    sa.Column('external_urls', postgresql.ARRAY(sa.Text()), server_default=sa.text('ARRAY[]::TEXT[]'), nullable=False),
    sa.CheckConstraint("response_type IN ('reply', 'dm', 'ignore', 'escalate', 'flag')", name='check_response_type'),
    sa.ForeignKeyConstraint(['assignment_id'], ['mention_assignments.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['mention_id'], ['mentions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['responded_by'], ['app_users.user_id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('monitor_analytics_hourly',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('monitor_id', sa.UUID(), nullable=False),
    sa.Column('hour_bucket', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('mention_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('unique_authors', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('total_likes', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('total_shares', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('total_comments', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('avg_engagement_rate', sa.DECIMAL(precision=5, scale=4), nullable=True),
    sa.Column('positive_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('negative_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('neutral_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('avg_sentiment', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('platform_breakdown', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('top_authors', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('top_hashtags', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['monitor_id'], ['monitors.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('monitor_id', 'hour_bucket')
    )
    op.create_table('monitor_mentions',
    sa.Column('monitor_id', sa.UUID(), nullable=False),
    sa.Column('mention_id', sa.UUID(), nullable=False),
    sa.Column('matched_keywords', postgresql.ARRAY(sa.TEXT()), server_default=sa.text('ARRAY[]::TEXT[]'), nullable=False),
    sa.Column('match_score', sa.DECIMAL(precision=5, scale=4), server_default=sa.text('1.0'), nullable=False),
    sa.Column('detected_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['mention_id'], ['mentions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['monitor_id'], ['monitors.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('monitor_id', 'mention_id')
    )
    op.create_index(op.f('ix_monitor_mentions_created_at'), 'monitor_mentions', ['created_at'], unique=False)
    op.create_index(op.f('ix_monitor_mentions_updated_at'), 'monitor_mentions', ['updated_at'], unique=False)
    op.create_table('alerts',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('rule_id', sa.UUID(), nullable=False),
    sa.Column('monitor_id', sa.UUID(), nullable=False),
    sa.Column('alert_type', sa.String(length=50), nullable=False),
    sa.Column('severity', sa.String(length=20), server_default=sa.text("'medium'"), nullable=False),
    sa.Column('title', sa.Text(), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('mention_ids', postgresql.ARRAY(sa.UUID()), server_default=sa.text('ARRAY[]::UUID[]'), nullable=False),
    sa.Column('alert_metadata', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('triggered_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('resolved_by', sa.String(length=128), nullable=True),
    sa.CheckConstraint("severity IN ('low', 'medium', 'high', 'critical')", name='alerts_severity_check'),
    sa.ForeignKeyConstraint(['monitor_id'], ['monitors.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['resolved_by'], ['app_users.user_id'], ),
    sa.ForeignKeyConstraint(['rule_id'], ['alert_rules.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('alert_deliveries',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('alert_id', sa.UUID(), nullable=False),
    sa.Column('channel', sa.String(length=20), nullable=False),
    sa.Column('recipient', sa.Text(), nullable=False),
    sa.Column('status', sa.String(length=20), server_default=sa.text("'pending'"), nullable=False),
    sa.Column('attempts', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("status IN ('pending', 'sent', 'failed', 'bounced')", name='alert_deliveries_status_check'),
    sa.ForeignKeyConstraint(['alert_id'], ['alerts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('posts',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('platform', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('author', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('posts_pkey'))
    )
    op.create_index(op.f('ix_posts_id'), 'posts', ['id'], unique=False)
    op.drop_table('alert_deliveries')
    op.drop_table('alerts')
    op.drop_index(op.f('ix_monitor_mentions_updated_at'), table_name='monitor_mentions')
    op.drop_index(op.f('ix_monitor_mentions_created_at'), table_name='monitor_mentions')
    op.drop_table('monitor_mentions')
    op.drop_table('monitor_analytics_hourly')
    op.drop_table('mention_responses')
    op.drop_table('mention_category_assignments')
    op.drop_table('alert_rules')
    op.drop_index(op.f('ix_workspace_subscriptions_workspace_id'), table_name='workspace_subscriptions')
    op.drop_index(op.f('ix_workspace_subscriptions_updated_at'), table_name='workspace_subscriptions')
    op.drop_index(op.f('ix_workspace_subscriptions_stripe_subscription_id'), table_name='workspace_subscriptions')
    op.drop_index(op.f('ix_workspace_subscriptions_plan_id'), table_name='workspace_subscriptions')
    op.drop_index(op.f('ix_workspace_subscriptions_current_period_end'), table_name='workspace_subscriptions')
    op.drop_index(op.f('ix_workspace_subscriptions_created_at'), table_name='workspace_subscriptions')
    op.drop_table('workspace_subscriptions')
    op.drop_table('workspace_members')
    op.drop_index(op.f('ix_workspace_integrations_workspace_id'), table_name='workspace_integrations')
    op.drop_index(op.f('ix_workspace_integrations_updated_at'), table_name='workspace_integrations')
    op.drop_index(op.f('ix_workspace_integrations_status'), table_name='workspace_integrations')
    op.drop_index(op.f('ix_workspace_integrations_provider_id'), table_name='workspace_integrations')
    op.drop_index(op.f('ix_workspace_integrations_created_by'), table_name='workspace_integrations')
    op.drop_index(op.f('ix_workspace_integrations_created_at'), table_name='workspace_integrations')
    op.drop_table('workspace_integrations')
    op.drop_index(op.f('ix_usage_tracking_workspace_id'), table_name='usage_tracking')
    op.drop_index(op.f('ix_usage_tracking_updated_at'), table_name='usage_tracking')
    op.drop_index(op.f('ix_usage_tracking_period_start'), table_name='usage_tracking')
    op.drop_index(op.f('ix_usage_tracking_created_at'), table_name='usage_tracking')
    op.drop_table('usage_tracking')
    op.drop_index(op.f('ix_notification_templates_workspace_id'), table_name='notification_templates')
    op.drop_index(op.f('ix_notification_templates_updated_at'), table_name='notification_templates')
    op.drop_index(op.f('ix_notification_templates_template_type'), table_name='notification_templates')
    op.drop_index(op.f('ix_notification_templates_name'), table_name='notification_templates')
    op.drop_index(op.f('ix_notification_templates_created_by'), table_name='notification_templates')
    op.drop_index(op.f('ix_notification_templates_created_at'), table_name='notification_templates')
    op.drop_index(op.f('ix_notification_templates_channel'), table_name='notification_templates')
    op.drop_index(op.f('ix_notification_templates_active'), table_name='notification_templates')
    op.drop_index('idx_notification_template_workspace_type', table_name='notification_templates')
    op.drop_table('notification_templates')
    op.drop_index(op.f('ix_notification_queue_workspace_id'), table_name='notification_queue')
    op.drop_index(op.f('ix_notification_queue_updated_at'), table_name='notification_queue')
    op.drop_index(op.f('ix_notification_queue_status'), table_name='notification_queue')
    op.drop_index(op.f('ix_notification_queue_scheduled_for'), table_name='notification_queue')
    op.drop_index(op.f('ix_notification_queue_recipient_id'), table_name='notification_queue')
    op.drop_index(op.f('ix_notification_queue_priority'), table_name='notification_queue')
    op.drop_index(op.f('ix_notification_queue_external_id'), table_name='notification_queue')
    op.drop_index(op.f('ix_notification_queue_created_at'), table_name='notification_queue')
    op.drop_index(op.f('ix_notification_queue_channel'), table_name='notification_queue')
    op.drop_index('idx_notification_queue_processing', table_name='notification_queue')
    op.drop_table('notification_queue')
    op.drop_index(op.f('ix_notification_preferences_workspace_id'), table_name='notification_preferences')
    op.drop_index(op.f('ix_notification_preferences_user_id'), table_name='notification_preferences')
    op.drop_index(op.f('ix_notification_preferences_updated_at'), table_name='notification_preferences')
    op.drop_index(op.f('ix_notification_preferences_notification_type'), table_name='notification_preferences')
    op.drop_index(op.f('ix_notification_preferences_enabled'), table_name='notification_preferences')
    op.drop_index(op.f('ix_notification_preferences_created_at'), table_name='notification_preferences')
    op.drop_index('idx_notification_pref_user_workspace', table_name='notification_preferences')
    op.drop_table('notification_preferences')
    op.drop_index(op.f('ix_monitors_updated_at'), table_name='monitors')
    op.drop_index(op.f('ix_monitors_created_at'), table_name='monitors')
    op.drop_table('monitors')
    op.drop_table('mention_fingerprints')
    op.drop_table('mention_categories')
    op.drop_table('mention_assignments')
    op.drop_table('influencer_categories')
    op.drop_index(op.f('ix_data_exports_workspace_id'), table_name='data_exports')
    op.drop_index(op.f('ix_data_exports_updated_at'), table_name='data_exports')
    op.drop_index(op.f('ix_data_exports_status'), table_name='data_exports')
    op.drop_index(op.f('ix_data_exports_requested_by'), table_name='data_exports')
    op.drop_index(op.f('ix_data_exports_export_type'), table_name='data_exports')
    op.drop_index(op.f('ix_data_exports_expires_at'), table_name='data_exports')
    op.drop_index(op.f('ix_data_exports_created_at'), table_name='data_exports')
    op.drop_table('data_exports')
    op.drop_index(op.f('ix_audit_logs_workspace_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_user_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_updated_at'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_success'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_session_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_resource_type'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_resource_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_created_at'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_action'), table_name='audit_logs')
    op.drop_index('idx_audit_log_user_action', table_name='audit_logs')
    op.drop_index('idx_audit_log_timestamp', table_name='audit_logs')
    op.drop_index('idx_audit_log_resource', table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_index(op.f('ix_workspaces_updated_at'), table_name='workspaces')
    op.drop_index(op.f('ix_workspaces_slug'), table_name='workspaces')
    op.drop_index(op.f('ix_workspaces_owner_id'), table_name='workspaces')
    op.drop_index(op.f('ix_workspaces_name'), table_name='workspaces')
    op.drop_index(op.f('ix_workspaces_created_at'), table_name='workspaces')
    op.drop_table('workspaces')
    op.drop_index(op.f('ix_mentions_updated_at'), table_name='mentions')
    op.drop_index(op.f('ix_mentions_created_at'), table_name='mentions')
    op.drop_table('mentions')
    op.drop_index(op.f('ix_social_users_username'), table_name='social_users')
    op.drop_index(op.f('ix_social_users_updated_at'), table_name='social_users')
    op.drop_index(op.f('ix_social_users_platform_user_id'), table_name='social_users')
    op.drop_index(op.f('ix_social_users_platform_id'), table_name='social_users')
    op.drop_index(op.f('ix_social_users_created_at'), table_name='social_users')
    op.drop_table('social_users')
    op.drop_index(op.f('ix_app_users_updated_at'), table_name='app_users')
    op.drop_index(op.f('ix_app_users_created_at'), table_name='app_users')
    op.drop_table('app_users')
    op.drop_index(op.f('ix_system_health_updated_at'), table_name='system_health')
    op.drop_index(op.f('ix_system_health_status'), table_name='system_health')
    op.drop_index(op.f('ix_system_health_last_check_at'), table_name='system_health')
    op.drop_index(op.f('ix_system_health_created_at'), table_name='system_health')
    op.drop_index(op.f('ix_system_health_component'), table_name='system_health')
    op.drop_index('idx_system_health_component_time', table_name='system_health')
    op.drop_table('system_health')
    op.drop_index(op.f('ix_system_configuration_updated_at'), table_name='system_configuration')
    op.drop_index(op.f('ix_system_configuration_key'), table_name='system_configuration')
    op.drop_index(op.f('ix_system_configuration_created_at'), table_name='system_configuration')
    op.drop_index(op.f('ix_system_configuration_category'), table_name='system_configuration')
    op.drop_table('system_configuration')
    op.drop_table('supertokens_users')
    op.drop_index(op.f('ix_subscription_plans_updated_at'), table_name='subscription_plans')
    op.drop_index(op.f('ix_subscription_plans_name'), table_name='subscription_plans')
    op.drop_index(op.f('ix_subscription_plans_created_at'), table_name='subscription_plans')
    op.drop_table('subscription_plans')
    op.drop_table('platforms')
    op.drop_index(op.f('ix_integration_providers_updated_at'), table_name='integration_providers')
    op.drop_index(op.f('ix_integration_providers_provider_type'), table_name='integration_providers')
    op.drop_index(op.f('ix_integration_providers_name'), table_name='integration_providers')
    op.drop_index(op.f('ix_integration_providers_created_at'), table_name='integration_providers')
    op.drop_index(op.f('ix_integration_providers_active'), table_name='integration_providers')
    op.drop_table('integration_providers')
    # ### end Alembic commands ###
